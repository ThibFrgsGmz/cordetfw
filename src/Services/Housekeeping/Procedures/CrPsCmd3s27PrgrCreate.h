/**
 * @file
 * This header file declares the function to create one instance of the CrPsCmd3s27Prgr procedure.
 * The procedure is configured with a set of function pointers representing the non-default
 * actions and guards of the procedure. Some of these functions may also be declared in
 * this header file in accordance with the configuration of the procedure in the FW Profile
 * Editor. In the latter case, the user has to provide an implementation for these functions
 * in a user-supplied body file.
 *
 * This header file has been automatically generated by the FW Profile Editor.
 * The procedure created by this file is shown in the figure below.
 * @image html CrPsCmd3s27Prgr.png
 *
 * @author FW Profile code generator version 5.01
 * @date Created on: Sep 6 2017 17:17:0
 */

/** Make sure to include this header file only once */
#ifndef CRPSCMD3S27PRGR_H_
#define CRPSCMD3S27PRGR_H_

/** FW Profile function definitions */
#include "FwPrConstants.h"

/** Action node identifiers */
#define CrPsCmd3s27Prgr_N1 (1)		/* The identifier of action node N1 in procedure CrPsCmd3s27Prgr */
#define CrPsCmd3s27Prgr_N2 (2)		/* The identifier of action node N2 in procedure CrPsCmd3s27Prgr */
#define CrPsCmd3s27Prgr_N3 (3)		/* The identifier of action node N3 in procedure CrPsCmd3s27Prgr */
#define CrPsCmd3s27Prgr_N4 (4)		/* The identifier of action node N4 in procedure CrPsCmd3s27Prgr */
#define CrPsCmd3s27Prgr_N5 (5)		/* The identifier of action node N5 in procedure CrPsCmd3s27Prgr */
#define CrPsCmd3s27Prgr_N6 (6)		/* The identifier of action node N6 in procedure CrPsCmd3s27Prgr */
#define CrPsCmd3s27Prgr_N7 (7)		/* The identifier of action node N7 in procedure CrPsCmd3s27Prgr */
#define CrPsCmd3s27Prgr_N8 (8)		/* The identifier of action node N8 in procedure CrPsCmd3s27Prgr */
#define CrPsCmd3s27Prgr_N9 (9)		/* The identifier of action node N9 in procedure CrPsCmd3s27Prgr */

/**
 * Create a new procedure descriptor.
 * This interface creates the procedure descriptor dynamically.
 * @param prData the pointer to the procedure data.
 * A value of NULL is legal (note that the default value of the pointer
 * to the procedure data when the procedure is created is NULL).
 * @return the pointer to the procedure descriptor
 */
FwPrDesc_t CrPsCmd3s27PrgrCreate(void* prData);

/**
 * Action for node N1.
 * <pre>
 * Retrieve a HkOneShotRep 
 * report from the OutFactory to hold
 * the one-shot report for the SID
 * </pre>
 * @param smDesc the procedure descriptor
 */
void CrPsCmd3s27PrgrN1(FwPrDesc_t prDesc);

/**
 * Action for node N2.
 * <pre>
 * Load the SID which is being 
 * processed in data pool item verFailData
 * </pre>
 * @param smDesc the procedure descriptor
 */
void CrPsCmd3s27PrgrN2(FwPrDesc_t prDesc);

/**
 * Action for node N3.
 * <pre>
 * Run the Command Progress
 * Failure Procedure 
 * </pre>
 * @param smDesc the procedure descriptor
 */
void CrPsCmd3s27PrgrN3(FwPrDesc_t prDesc);

/**
 * Action for node N4.
 * <pre>
 * Generate error report
 * OUTFACTORY_FAIL
 * </pre>
 * @param smDesc the procedure descriptor
 */
void CrPsCmd3s27PrgrN4(FwPrDesc_t prDesc);

/**
 * Action for node N5.
 * <pre>
 * Configure the HkOneShotRep
 * report with the SID being processed
 * and load it in the OutLoader
 * </pre>
 * @param smDesc the procedure descriptor
 */
void CrPsCmd3s27PrgrN5(FwPrDesc_t prDesc);

/**
 * Action for node N6.
 * <pre>
 * Set action outcome
 * to: 'completed'
 * </pre>
 * @param smDesc the procedure descriptor
 */
void CrPsCmd3s27PrgrN6(FwPrDesc_t prDesc);

/**
 * Action for node N7.
 * <pre>
 * Set action outcome
 * to 'continue'
 * </pre>
 * @param smDesc the procedure descriptor
 */
void CrPsCmd3s27PrgrN7(FwPrDesc_t prDesc);

/**
 * Action for node N8.
 * <pre>
 * Start processing the
 * first valid SID in the command
 * </pre>
 * @param smDesc the procedure descriptor
 */
void CrPsCmd3s27PrgrN8(FwPrDesc_t prDesc);

/**
 * Action for node N9.
 * <pre>
 * Process the next
 * valid SID in the command
 * </pre>
 * @param smDesc the procedure descriptor
 */
void CrPsCmd3s27PrgrN9(FwPrDesc_t prDesc);

/**
 * Guard on the Control Flow from DECISION1 to N2.
 * <pre>
 * OutFactory fails to
 * return a report 
 * </pre>
 * @param smDesc the procedure descriptor
 * @return 1 if the guard is fulfilled, otherwise 0.
 */
FwPrBool_t CrPsCmd3s27PrgrG1(FwPrDesc_t prDesc);

/**
 * Guard on the Control Flow from DECISION1 to N5.
 * Else 
 * @param smDesc the procedure descriptor
 * @return 1 if the guard is fulfilled, otherwise 0.
 */
FwPrBool_t CrPsCmd3s27PrgrG1E(FwPrDesc_t prDesc);

/**
 * Guard on the Control Flow from DECISION2 to N6.
 * <pre>
 * This SID was the last valid
 * SID in the (3,27) or (3,28) 
 * </pre>
 * @param smDesc the procedure descriptor
 * @return 1 if the guard is fulfilled, otherwise 0.
 */
FwPrBool_t CrPsCmd3s27PrgrG2(FwPrDesc_t prDesc);

/**
 * Guard on the Control Flow from DECISION2 to N7.
 * Else 
 * @param smDesc the procedure descriptor
 * @return 1 if the guard is fulfilled, otherwise 0.
 */
FwPrBool_t CrPsCmd3s27PrgrG2E(FwPrDesc_t prDesc);

/**
 * Guard on the Control Flow from N7 to N9.
 * <pre>
 * Next Execution
 * </pre>
 * @param smDesc the procedure descriptor
 * @return 1 if the guard is fulfilled, otherwise 0.
 */
FwPrBool_t CrPsCmd3s27PrgrG3(FwPrDesc_t prDesc);

#endif /* CrPsCmd3s27PrgrCreate_H_ */