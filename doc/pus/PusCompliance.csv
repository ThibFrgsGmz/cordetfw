ReqN,ReqTitle,ReqText,Status,Justification
5.3.1a,General,Each service type shall be uniquely identified by exactly one service type name.,C1/C2,The service type of pre-defined services is taken from the PUS and the service types of other services are set by the application developers at adaptation point ICM-18 for incoming commands and OCM-7 for out-going reports.
b,,"Each service type shall be uniquely identified by exactly one service type identifier that is an unsigned integer greater than or equal to 1, and less than or equal to 255.",C1/C2,See justification of previous requirement.
c,,Each standard service type shall have a service type identifier less than or equal to 127.,C1/C2,See justification of previous requirement.
d,,Each mission specific service type shall be associated with a service type identifier greater than or equal to 128.,C1/C2,See justification of previous requirement.
5.3.2a,Subservice Type,Each service type shall define at least one subservice type.,C1,"For pre-defined services, at least one sub-service is defined (see section TBD to TBD). For other services, adaptation points ICM-19 for incoming commands and OCM-8 for out-going reports imply definition of a sub-service for each service."
b,,Each subservice type shall be defined by exactly one service type.,C1/C2,"For pre-defined services, the definition of the PUS is taken over. For other services, compliance may be achieved when closing adaptation point ICM-19 for incoming commands and OCM-8 for out-going reports."
c,,Each subservice type shall be uniquely identified by exactly one subservice type name.,C1/C2,See justification of previous requirement.
d,,"For each subservice type, whether the realization of that subservice type is implicitly required for each realization of the service type or required by tailoring shall be declared when specifying that subservice type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
e,,"For each subservice type, whether multiple realizations of that subservice type are allowed within a single service shall be declared when specifying that subservice type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
f,,"For each subservice type, the observables shall be declared when specifying that subservice type.",C1/C2,A list of observables is provided for each pre-defined service in this document (see Observability Tables in sections TBD to TBD)
5.3.3.1a,Message Type,Each message type shall be uniquely identified by exactly one message type name.,C1,The CORDET Framework implements a Message as a command or report exchanged between applications and defines a message to have one single type and one single sub-type (see section 4 of CORDET Framework Definition Document).
b,,Each message type shall be uniquely identified by exactly one message type identifier.,C1,See justification of previous requirement.
c,,Each message type identifier shall be composed of: \newline 1. the service type identifier of the service type that contains that message type; \newline 2. a message subtype identifier that uniquely identifies that message type within that service type.,C1,See justification of previous requirement.
d,,"Each message subtype identifier shall be an unsigned integer greater than or equal to 1, and less than or equal to 255.",C1/C2,"For pre-defined services, the command and report types are taken over from the PUS. For other services, they are under the control of the application developer through adaptation points ICM-18, ICM-19, OCM-7 and OCM-8."
e,,Each standard message type identifier shall have a message subtype identifier less than or equal to 127.,C1/C2,See justification of previous requirement.
f,,Each mission specific message type that belongs to a standard service type shall have a service subtype identifier greater than or equal to 128.,C1/C2,See justification of previous requirement.
g,,"Each message type shall either be: \newline 1. a request type, or \newline 2. a report type.",C1,See justification of requirement 5.3.3.1a
5.3.3.2a,Request Type,Each request type shall define one or more instruction types.,TBD,The CORDET Framework implements a Request as an incoming command received by an application which uses that command as part of a service it provides to other applications. The concept of instruction type is however not understood.
b,,Each instruction type shall be defined for exactly one request type.,TBD,See justification of previous requirement.
c,,Each instruction type shall be uniquely identified by exactly one instruction type name.,TBD,See justification of previous requirement.
d,,"For each request type and for each instruction type of that request type, whether that request type provides a single instruction slot or multiple instruction slots for that instruction type shall be declared when specifying that request type.",TBD,See justification of previous requirement.
e,,"For each request type that contains several instruction types, the allowed combinations of instruction types that can be used in a request of that request type shall be declared when specifying that request type.",TBD,See justification of previous requirement.
f,,"For each instruction type, the instruction arguments used by that instruction type, their definition and their ordering within the instruction type shall be declared when specifying that instruction type.",TBD,See justification of previous requirement.
g,,"For each request type that provides multiple instruction slots, if that request type constrains the scope of the instructions that can be issued within a request of that type, the argument or set of arguments of the related instruction types that define that scope shall be grouped together in the definition of the request type.",TBD,See justification of previous requirement.
h,,"For each request type, the definition of the request arguments provided by that request type, their definition and their ordering within the request type shall be declared when specifying that request type.",TBD,See justification of previous requirement.
5.3.3.3a,Report Type,"Each report type shall either be: \newline 1. a data report type, \newline 2. a verification report type, or \newline 3. an event report type.",C1/C2,"For pre-defined services, the report types are taken over from the PUS. For other services, the report type is under the control of the application developer through adaptation points OCM-*."
b,,Each report type shall define exactly one notification type.,C1/C2,See justification of previous requirement.
c,,Each notification type shall be defined for exactly one report type.,C1/C2,See justification of previous requirement.
d,,Each notification type shall be uniquely identified by exactly one notification type name.,C1/C2,See justification of previous requirement.
e,,"For each report type and for each notification type of that report type, whether that report type provides a single notification slot or multiple notification slots for that notification type shall be declared when specifying that report type.",C1/C2,See justification of previous requirement.
5.3.4a,Capability Type,Each subservice type shall define at least one capability type.,C1/C2,"For pre-defined services, the subservice types are taken over from the PUS. For other subservices, the subservice type definition is under the control of the application developer through adaptation points OCM-* and ICM-*."
b,,"For each capability type defined by a subservice type, the applicability constraints of that capability type shall be declared when specifying that subservice type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
5.3.5.1a,Transaction Type,Each transaction type shall be defined by exactly one capability type.,TBD,The concept of transaction type is not yet understood
b,,"Each transaction type shall either be: \newline 1. a request related transaction type, \newline 2. an autonomous data reporting transaction type, or \newline 3. an event reporting transaction type.",TBD,See justification of previous requirement.
5.3.5.2.1a,Request related transaction type,Each request related transaction type shall involve exactly one request type.,TBD,See justification of previous requirement.
b,,Each request type shall be involved in exactly one request related transaction type.,TBD,See justification of previous requirement.
5.3.5.2.2a,Response Type,Each request type shall be linked to at most one data report type.,TBD,See justification of previous requirement.
b,,"For each instruction type that is linked to a notification type, whether a realization of that instruction type can cause the generation of multiple notifications shall be declared when specifying that instruction type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
5.3.5.2.3a,Execution verification profile,"For each request type, the pre-conditions to verify prior to starting the execution of each request of that type shall be declared when specifying that request type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
b,,"For each instruction type, the pre-conditions to verify prior to starting the execution of each instruction of that type shall be declared when specifying that instruction type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
c,,"For each request type that provides a multiple instruction slots capability, whether the subservice verifies the suitability of all instructions contained within each request of that type before authorizing the start of execution of that request shall be declared when specifying that request type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
d,,"For each instruction type, the conditions to verify during the execution of each instruction of that type shall be declared when specifying that instruction type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
e,,"For each instruction type, the post-conditions to verify at the end of the execution of each instruction of that type shall be declared when specifying that instruction type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
f,,"For each request type, the post-conditions to verify at the end of the execution of each request of that type shall be declared when specifying that request type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
g,,"For each request type, the execution verification profile used to report the start, progress and completion of execution of each request of that type shall be declared when specifying that request type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
h,,Each progress of execution notification shall provide the means to uniquely identify the instruction that progress of execution is notified.,TBD,TBD
I,,"For each instruction type, the functionality that the subservice performs when executing an instruction of that type shall be declared when specifying that instruction type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
j,,"For each request type, the request-specific functionality that the subservice performs when executing a request of that type shall be declared when specifying that request type.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
5.3.5.3a,Autonomous data reporting transaction type,Each autonomous data reporting transaction type shall involve exactly one data report type.,TBD,See justification of requirement 5.3.5.1a
b,,Each data report type shall be involved in at most one autonomous data reporting transaction type.,TBD,See justification of requirement 5.3.5.1a
5.3.5.4a,Event reporting transaction type,Each event reporting transaction type shall involve exactly one event report type.,TBD,See justification of requirement 5.3.5.1a
b,,Each event report type shall be involved in exactly one event reporting transaction type.,TBD,See justification of requirement 5.3.5.1a
5.3.6,Tailoring the generic service type abstraction level,Tailoring the generic service type abstraction level shall consist of:  \newline 1. adding mission-specific service types; \newline 2. adding mission-specific subservice types; \newline 3. adding mission-specific capability types; \newline 4. adding mission-specific message types.,C2,"The CORDET Framework allows new service types and sub-types to be added through adaptation points OCM-* and ICM-*. To each new service, mission-specific capabilities and messages can be associated."
5.4.2.1a,Application process,"Each application process shall either be: \newline 1. an on-board application process, or \newline 2. a ground application process.",C1,The way PUS-style application processes are implemented in the CORDET Framework is discussed in section 2.5 of the CORDET Definition Document
b,,Each application process that hosts at least one subservice provider shall be identified by an application process identifier that is unique across the system that hosts that subservice provider.,C2,The CORDET Framework does not directly implement the PUS concept of Application Process (see discussion in section 2.5 of the CORDET Framework Definition Document) but applications can customize the factory components which create the packets representing commands and reports (adaptation points FAC-1) such that they fill in the header information in the packets in accordance with their allocation of APIDs.
c,,Each application process identifier shall be an unsigned integer that is less than or equal to 2046.,C2,See justification of previous requirement.
d,,Each application process that hosts at least one subservice user shall be identified by an application process user identifier that is unique within the context of the overall space system.,C1,The application process user identifier of a service user is the source of commands issued by that service user and the destination of reports received by that service user. This can be mapped to the concept of command source and report destination (see section 4 of the CORDET Framework Definition Document). 
e,,"Each application process user identifier shall be an unsigned integer that is greater than or equal to 0, and less than or equal to 65535.",C1,See justification of previous requirement.
f,,"For each report that it generates, each on-board application process shall time tag that report using the on-board reference time.",C1,The time-stamp of out-going components is set by the Send Packet Procedure of the OutComponent of the CORDET Framework (see section 6.1.1 of the CORDET Framework Definition Document).
g,,"For each application process, whether that application process time tags the reports before collecting the values of the constituting parameters or after shall be declared when specifying that application process.",C1,"In the CORDET Framework, the time-stamp of a report represents the time when an application makes a request to issue that report (this is after the report data have been collected). See section 4.2.1 of the CORDET Framework Definition Document."
h,,"For each application process, whether that application process provides the capability to report the status of the on-board time reference used when time tagging reports shall be declared when specifying that application process.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
I,,"For each application process, whether that application process provides the capability to count the type of generated messages per destination and report the corresponding message type counter shall be declared when specifying that application process.",C1,The OutStream components maintain counters of out-going commands and reports sent to their destination (there is one OutStream for each destination). See section 5.2.1 of the CORDET Framework Definition Document.
j,,"Each application process that provides the capability to count the type of generated messages per destination and report the corresponding message type counter shall maintain, per destination, a counter for each message type that it generates.",C1,See justification of previous requirement.
5.4.3.2a,On-board parameter,Each on-board parameter shall be identified by exactly one on-board parameter identifier that is unique across the entire spacecraft.,C2,The PUS Extension of the CORDET Framework maps on-board parameters to the Data Items in the Data Pool Component. The application developer is responsible for defining the Data Items (see adaptation point DP-7) and this includes the allocation of their identifiers.
b,,The set of on-board parameter minimum sampling intervals used to access the on-board parameters shall be declared when specifying the spacecraft architecture.,TBD,TBD: this is part of the definition of service 3
c,,Each on-board parameter shall be associated to exactly one on-board parameter minimum sampling interval.,TBD,TBD: this is part of the definition of service 3
d,,All on-board parameters accessed by an application process shall be associated to the same on-board parameter minimum sampling interval.,TBD,TBD: this is part of the definition of service 3
5.4.3.3.1a,On-board memory,Each on-board memory shall be identified by exactly one on-board memory identifier.,TBD,TBD: this is part of the definition of service 6
b,,"At any time, each on-board memory identifier shall uniquely identify exactly one on-board memory that is unique across the entire spacecraft.",TBD,TBD: this is part of the definition of service 6
c,,"For each on-board memory, the following characteristics of that memory shall be declared when specifying that memory: \newline 1. the memory access alignment constraint; \newline 2. the memory size, in bytes; \newline 3. the allowed operations; \newline 4. the addressing scheme.",TBD,TBD: this is part of the definition of service 6
d,,"When declaring the characteristics of an on-board memory, the allowed operations shall be one of the following: \newline 1. ""read only""; \newline 2. ""read and write""; \newline 3. ""write only"".",TBD,TBD: this is part of the definition of service 6
e,,"For each on-board memory, whether scrubbing that memory is supported shall be declared when specifying that memory.",TBD,TBD: this is part of the definition of service 6
f,,"For each on-board memory, whether write protecting that memory is supported shall be declared when specifying that memory.",TBD,TBD: this is part of the definition of service 6
5.4.3.3.2a,Addressing Scheme,"For each on-board memory, whether an absolute addressing scheme for that memory is exposed in the space to ground interface shall be declared when specifying that memory.",TBD,TBD: this is part of the definition of service 6
b,,Absolute addressing implies that the memory addresses and related offsets shall be expressed in bytes.,TBD,TBD: this is part of the definition of service 6
c,,"For each on-board memory, whether a base plus offset addressing scheme for that memory is exposed in the space to ground interface shall be declared when specifying that memory.",TBD,TBD: this is part of the definition of service 6
d,,Base plus offset addressing implies that the base references when expressed as an absolute address and related offsets shall be expressed in bytes.,TBD,TBD: this is part of the definition of service 6
5.4.3.4a,Virtual channel,The list of virtual channels defined for downlinking reports and their characteristics shall be declared when specifying the space to ground interface.,NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
b,,"For each virtual channel defined for downlinking reports, the virtual channel identifier used to refer to that virtual channel shall be declared when specifying that virtual channel.",NA,This requirement does not concern the implementation of the services and is therefore outside the scope of the PUS Extension of the CORDET Framework
5.4.4,Checksum algorithm,"For each checksum algorithm used on-board, the list of subservice providers that use that checksum algorithm shall be declared when specifying the spacecraft architecture.",,
5.4.5a,On-board file system,Each on-board file system shall be identified by exactly one on-board file system identifier that is unique across the entire spacecraft.,TBD,TBD
b,,Each object in an on-board file system shall be uniquely identified by an object path that is the combination of a repository path and an object name.,TBD,TBD
c,,"For each on-board file system, whether that file system supports files with unbounded size shall be declared when specifying that file system.",TBD,TBD
v,,The set of file attributes supported by each on-board file system shall be declared when specifying that file system.,TBD,TBD
e,,"For each on-board file system, whether that file system provides the capability to lock files shall be declared when specifying file system.",TBD,TBD
f,,An on-board file system shall not be accessed by more than one file management service.,TBD,TBD
5.4.6a,Service,Each service shall be of exactly one service type.,C1,"To each CORDET Service, one single type attribute is assigned (see section 4.1.1 of the CORDET Framework Definition Document)"
b,,"For each subservice type whose realization is implicitly required, each service of the related service type shall provide at least one subservice of that subservice type.",TBD,This requirement is not understood
c,,"For each subservice type whose realization is required by tailoring and for each service of the service type that defines that subservice type, whether the realization of that subservice type is required for that service shall be declared when specifying that service.",TBD,This requirement is not understood
d,,"For each subservice type that allows multiple realizations within a single service, each realization of that subservice type shall be declared when specifying that service.",TBD,This requirement is not understood
e,,The service topology of the overall space system shall be declared when specifying the space system architecture.,C1,The service topology of a CORDET System is defined by several adaptation points and application developers are required to fill in all framework adaptation points (or accept their default implementation) as part of the application instantiation process
5.4.7.1a,Subservice,Each subservice shall be of exactly one subservice type.,C1,"To each CORDET Command or Report, one single sub-type attribute is assigned (see section 4.1.1 of the CORDET Framework Definition Document)"
b,,Each subservice shall belong to exactly one service.,C1/C2,"For pre-defined services, the PUS definition is followed. For application-dependent services, the user is responsible for ensuring that no two commands or reports receive the same definition when the OCM and ICM adaptation points are filled in"
5.4.7.2.1a,Subservice Entity,Each subservice entity shall belong to exactly one subservice.,TBD,The difference between this requirement and requirement 5.4.7.1a is not understood
b,,Each subservice entity shall be hosted by exactly one application process.,TBD,This requirement is not understood
c,,Each subservice entity shall be either a subservice user or a subservice provider.,TBD,This requirement is not understood
5.4.7.2.2a,Subservice Provider,Each subservice shall provide exactly one subservice provider.,TBD,This requirement is not understood
5.4.7.2.3a,Subservice User,Each subservice shall provide at least one subservice user.,TBD,This requirement is not understood
5.4.8a,Capability,Each subservice shall provide at least one subservice capability.,TBD,This requirement is not understood
5.4.8b,,"For each subservice and for each capability type defined by the corresponding subservice type, the inclusion of the related capability in that subservice shall comply with the applicability constraints of that capability type.",TBD,This requirement is not understood
5.4.9a,Failed progress of execution,"For each request type for which a failed progress of execution can be reported, whether the corresponding failed progress of execution notifications are reported within failed progress of execution verification reports or as part of the completion of execution verification report for the related requests shall be declared when specifying the request type related subservice.",C1,"If a service chooses the support verification of failed progress of execution, then this can only be reported through (1,5) and (1,6) reports (see definition of service 1)"
5.4.10a,Transactions,Each subservice shall provide the means to manage all transactions that it initiates according to the mission operational requirements.,C2,A transaction is implemented by a command and the reports which are triggered by that command (TBC). Application developers are responsible for selecting the set of supported commands and reports such that thus requirement is satisfied
b,,Each transaction shall be initiated and maintained by exactly one subservice.,C2,See justification of previous requirement.
5.4.11.1a,Message,Each message shall be of a single message type.,,
